{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "PlaybookName": {
            "type": "string"
        }
    },
    "variables": {
        "SentineltriageassistantConnectionName": "SentinelTriageAssistant",
        "AzureadConnectionName": "[concat('Azuread-', parameters('PlaybookName'))]",
        "MicrosoftSentinelConnectionName": "[concat('MicrosoftSentinel-', parameters('PlaybookName'))]",
        "TeamsConnectionName": "[concat('Teams-', parameters('PlaybookName'))]"
    },
    "resources": [
        {
            "properties": {
                "provisioningState": "Succeeded",
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "Microsoft_Sentinel_incident": {
                            "type": "ApiConnectionWebhook",
                            "inputs": {
                                "body": {
                                    "callback_url": "@{listCallbackUrl()}"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azuresentinel_1']['connectionId']"
                                    }
                                },
                                "path": "/incident-creation"
                            }
                        }
                    },
                    "actions": {
                        "Base_Module": {
                            "runAfter": {
                                "Condition_-_Gebruiker_is_niet_'unassigned'": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "body": {
                                    "AddAccountComments": false,
                                    "AddIPComments": false,
                                    "EnrichIPsWithGeoData": false,
                                    "Entities": "@triggerBody()?['object']?['properties']?['relatedEntities']",
                                    "IncidentARMId": "@triggerBody()?['object']?['id']",
                                    "WorkspaceId": "@triggerBody()?['workspaceId']"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['SentinelTriageAssistant']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/workflows/6e68021fa52540d6975742339365ff09/triggers/manual/paths/invoke/func/base",
                                "queries": {
                                    "api-version": "2016-10-01",
                                    "sig": "oRIkZcdtOkQcUPEaTqPFeLlr_7bkILYWDf5voVpLKG8",
                                    "sp": "/triggers/manual/run",
                                    "sv": "1.0"
                                }
                            }
                        },
                        "Compose": {
                            "runAfter": {
                                "Initialize_variable_-_Accounts": [
                                    "Succeeded"
                                ],
                                "Initialize_variable_-_IPs": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Compose",
                            "inputs": {
                                "$schema": "http://adaptivecards.io/schemas/adaptive-card.json",
                                "actions": [
                                    {
                                        "data": {
                                            "x": "confirm"
                                        },
                                        "title": "Submit response!",
                                        "type": "Action.Submit"
                                    }
                                ],
                                "body": [
                                    {
                                        "size": "Small",
                                        "style": "Person",
                                        "type": "Image",
                                        "url": "https://connectoricons-prod.azureedge.net/releases/v1.0.1391/1.0.1391.2130/azuresentinel/icon.png"
                                    },
                                    {
                                        "size": "Large",
                                        "text": "Sentinel incident @{triggerBody()?['object']?['properties']?['incidentNumber']} assigned",
                                        "type": "TextBlock",
                                        "wrap": true
                                    },
                                    {
                                        "text": "[[Bekijk hier het incident]](@{triggerBody()?['object']?['properties']?['incidentUrl']})",
                                        "type": "TextBlock",
                                        "wrap": true
                                    },
                                    {
                                        "facts": [
                                            {
                                                "title": "Incident",
                                                "value": "@{triggerBody()?['object']?['properties']?['title']}"
                                            },
                                            {
                                                "title": "Incident ID",
                                                "value": "@{triggerBody()?['object']?['properties']?['incidentNumber']}"
                                            },
                                            {
                                                "title": "Tijd",
                                                "value": "@{convertTimeZone(triggerBody()?['object']?['properties']?['CreatedTimeUtc'], 'UTC', 'Romance Standard Time', 'dd/MM/yyyy HH:mm:ss')}"
                                            },
                                            {
                                                "title": "Severity",
                                                "value": "@{triggerBody()?['object']?['properties']?['severity']}"
                                            },
                                            {
                                                "title": "Description",
                                                "value": "@{triggerBody()?['object']?['properties']?['description']}"
                                            },
                                            {
                                                "title": "Gebruiker(s)",
                                                "value": "@{variables('Accounts')}"
                                            },
                                            {
                                                "title": "IP(s)",
                                                "value": "@{variables('IPs')}"
                                            }
                                        ],
                                        "type": "FactSet"
                                    },
                                    {
                                        "size": "Large",
                                        "spacing": "Large",
                                        "text": "Respond:",
                                        "type": "TextBlock",
                                        "weight": "Bolder"
                                    },
                                    {
                                        "choices": [
                                            {
                                                "title": "Teams bericht sturen",
                                                "value": "bericht"
                                            },
                                            {
                                                "title": "Entities onderzoeken",
                                                "value": "onderzoek"
                                            },
                                            {
                                                "title": "Account blokkeren",
                                                "value": "blokkeren"
                                            }
                                        ],
                                        "errorMessage": "Geef een keuze in!",
                                        "id": "keuze",
                                        "isRequired": true,
                                        "label": "Wat wilt u doen?",
                                        "type": "Input.ChoiceSet"
                                    }
                                ],
                                "type": "AdaptiveCard",
                                "version": "1.3"
                            }
                        },
                        "Condition_-_Gebruiker_is_niet_'unassigned'": {
                            "actions": {
                                "Terminate_2": {
                                    "runAfter": {},
                                    "type": "Terminate",
                                    "inputs": {
                                        "runStatus": "Cancelled"
                                    }
                                }
                            },
                            "runAfter": {},
                            "expression": {
                                "and": [
                                    {
                                        "equals": [
                                            "@triggerBody()?['object']?['properties']?['owner']?['email']",
                                            null
                                        ]
                                    }
                                ]
                            },
                            "type": "If"
                        },
                        "Entities_-_Get_Accounts": {
                            "runAfter": {
                                "Base_Module": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "body": "@triggerBody()?['object']?['properties']?['relatedEntities']",
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azuresentinel_1']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/entities/account"
                            }
                        },
                        "Entities_-_Get_IPs": {
                            "runAfter": {
                                "Base_Module": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "body": "@triggerBody()?['object']?['properties']?['relatedEntities']",
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azuresentinel_1']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/entities/ip"
                            }
                        },
                        "For_each": {
                            "foreach": "@body('Entities_-_Get_IPs')?['IPs']",
                            "actions": {
                                "Append_to_string_variable": {
                                    "runAfter": {},
                                    "type": "AppendToStringVariable",
                                    "inputs": {
                                        "name": "IPKomma",
                                        "value": "@{items('For_each')?['Address']}, "
                                    }
                                }
                            },
                            "runAfter": {
                                "Initialize_variable_-_IPs_met_komma": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "For_each_2": {
                            "foreach": "@body('Entities_-_Get_Accounts')?['Accounts']",
                            "actions": {
                                "Append_to_string_variable_2": {
                                    "runAfter": {
                                        "Get_user": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "AppendToStringVariable",
                                    "inputs": {
                                        "name": "AccountKomma",
                                        "value": "@{body('Get_user')?['displayName']}, "
                                    }
                                },
                                "Get_user": {
                                    "runAfter": {},
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['azuread']['connectionId']"
                                            }
                                        },
                                        "method": "get",
                                        "path": "/v1.0/users/@{encodeURIComponent(items('For_each_2')?['AadUserId'])}"
                                    }
                                }
                            },
                            "runAfter": {
                                "Initialize_variable_-_Accounts_met_komma": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "Initialize_variable_-_Accounts": {
                            "runAfter": {
                                "For_each_2": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "Accounts",
                                        "type": "string",
                                        "value": "@{substring(variables('AccountKomma'),0,sub(length(variables('AccountKomma')),2))}"
                                    }
                                ]
                            }
                        },
                        "Initialize_variable_-_Accounts_met_komma": {
                            "runAfter": {
                                "Entities_-_Get_Accounts": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "AccountKomma",
                                        "type": "string"
                                    }
                                ]
                            }
                        },
                        "Initialize_variable_-_IPs": {
                            "runAfter": {
                                "For_each": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "IPs",
                                        "type": "string",
                                        "value": "@{substring(variables('IPKomma'),0,sub(length(variables('IPKomma')),2))}"
                                    }
                                ]
                            }
                        },
                        "Initialize_variable_-_IPs_met_komma": {
                            "runAfter": {
                                "Entities_-_Get_IPs": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "IPKomma",
                                        "type": "string"
                                    }
                                ]
                            }
                        },
                        "Post_adaptive_card_and_wait_for_a_response": {
                            "runAfter": {
                                "Compose": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnectionWebhook",
                            "inputs": {
                                "body": {
                                    "body": {
                                        "messageBody": "@{outputs('Compose')}",
                                        "recipient": {
                                            "to": "@triggerBody()?['object']?['properties']?['owner']?['email']"
                                        },
                                        "updateMessage": "Thanks for your response!"
                                    },
                                    "notificationUrl": "@{listCallbackUrl()}"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['teams']['connectionId']"
                                    }
                                },
                                "path": "/v1.0/teams/conversation/gatherinput/poster/Flow bot/location/@{encodeURIComponent('Chat with Flow bot')}/$subscriptions"
                            }
                        },
                        "Switch": {
                            "runAfter": {
                                "Post_adaptive_card_and_wait_for_a_response": [
                                    "Succeeded"
                                ]
                            },
                            "cases": {
                                "Case": {
                                    "case": "blokkeren",
                                    "actions": {
                                        "Run_Playbook_Module_3": {
                                            "runAfter": {},
                                            "type": "ApiConnection",
                                            "inputs": {
                                                "body": {
                                                    "AddIncidentComments": false,
                                                    "BaseModuleBody": "@{body('Base_Module')}",
                                                    "LogicAppResourceId": "/subscriptions/ca8ecf1f-c60f-4c3b-9aa8-238c5b6f5e20/resourceGroups/axeltest/providers/Microsoft.Logic/workflows/OwnerPrompt-BlockUser",
                                                    "PlaybookName": "Block user playbook",
                                                    "TenantId": "90625911-bfac-4bb3-9734-db8cd7699a52"
                                                },
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['SentinelTriageAssistant']['connectionId']"
                                                    }
                                                },
                                                "method": "post",
                                                "path": "/workflows/6e68021fa52540d6975742339365ff09/triggers/manual/paths/invoke/func/runplaybook",
                                                "queries": {
                                                    "api-version": "2016-10-01",
                                                    "sig": "oRIkZcdtOkQcUPEaTqPFeLlr_7bkILYWDf5voVpLKG8",
                                                    "sp": "/triggers/manual/run",
                                                    "sv": "1.0"
                                                }
                                            }
                                        }
                                    }
                                },
                                "Onderzoek": {
                                    "case": "onderzoek",
                                    "actions": {
                                        "Run_Playbook_Module_2": {
                                            "runAfter": {},
                                            "type": "ApiConnection",
                                            "inputs": {
                                                "body": {
                                                    "AddIncidentComments": false,
                                                    "BaseModuleBody": "@{body('Base_Module')}",
                                                    "LogicAppResourceId": "/subscriptions/ca8ecf1f-c60f-4c3b-9aa8-238c5b6f5e20/resourceGroups/axeltest/providers/Microsoft.Logic/workflows/OwnerPrompt-InvestigateEntity",
                                                    "PlaybookName": "Further investigation",
                                                    "TenantId": "90625911-bfac-4bb3-9734-db8cd7699a52"
                                                },
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['SentinelTriageAssistant']['connectionId']"
                                                    }
                                                },
                                                "method": "post",
                                                "path": "/workflows/6e68021fa52540d6975742339365ff09/triggers/manual/paths/invoke/func/runplaybook",
                                                "queries": {
                                                    "api-version": "2016-10-01",
                                                    "sig": "oRIkZcdtOkQcUPEaTqPFeLlr_7bkILYWDf5voVpLKG8",
                                                    "sp": "/triggers/manual/run",
                                                    "sv": "1.0"
                                                }
                                            }
                                        }
                                    }
                                },
                                "Teams_bericht": {
                                    "case": "bericht",
                                    "actions": {
                                        "Run_Playbook_Module": {
                                            "runAfter": {},
                                            "type": "ApiConnection",
                                            "inputs": {
                                                "body": {
                                                    "AddIncidentComments": false,
                                                    "BaseModuleBody": "@{body('Base_Module')}",
                                                    "LogicAppResourceId": "/subscriptions/ca8ecf1f-c60f-4c3b-9aa8-238c5b6f5e20/resourceGroups/axeltest/providers/Microsoft.Logic/workflows/OwnerPrompt-Teams",
                                                    "PlaybookName": "Teams bericht",
                                                    "TenantId": "90625911-bfac-4bb3-9734-db8cd7699a52"
                                                },
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['SentinelTriageAssistant']['connectionId']"
                                                    }
                                                },
                                                "method": "post",
                                                "path": "/workflows/6e68021fa52540d6975742339365ff09/triggers/manual/paths/invoke/func/runplaybook",
                                                "queries": {
                                                    "api-version": "2016-10-01",
                                                    "sig": "oRIkZcdtOkQcUPEaTqPFeLlr_7bkILYWDf5voVpLKG8",
                                                    "sp": "/triggers/manual/run",
                                                    "sv": "1.0"
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "default": {
                                "actions": {
                                    "Terminate": {
                                        "runAfter": {},
                                        "type": "Terminate",
                                        "inputs": {
                                            "runError": {
                                                "code": "1",
                                                "message": "Teams bericht error"
                                            },
                                            "runStatus": "Failed"
                                        }
                                    }
                                }
                            },
                            "expression": "@body('Post_Adaptive_Card_and_wait_for_a_response')?['data']?['keuze']",
                            "type": "Switch"
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "SentinelTriageAssistant": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('SentineltriageassistantConnectionName'))]",
                                "connectionName": "[variables('SentineltriageassistantConnectionName')]",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Web/customApis/', variables('SentineltriageassistantConnectionName'))]"
                            },
                            "azuread": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('AzureadConnectionName'))]",
                                "connectionName": "[variables('AzureadConnectionName')]",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Azuread')]"
                            },
                            "azuresentinel_1": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
                                "connectionName": "[variables('MicrosoftSentinelConnectionName')]",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Azuresentinel')]",
                                "connectionProperties": {
                                    "authentication": {
                                        "type": "ManagedServiceIdentity"
                                    }
                                }
                            },
                            "teams": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('TeamsConnectionName'))]",
                                "connectionName": "[variables('TeamsConnectionName')]",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Teams')]"
                            }
                        }
                    }
                }
            },
            "name": "[parameters('PlaybookName')]",
            "type": "Microsoft.Logic/workflows",
            "location": "[resourceGroup().location]",
            "tags": {
                "use case": "5"
            },
            "identity": {
                "type": "SystemAssigned"
            },
            "apiVersion": "2017-07-01",
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', variables('AzureadConnectionName'))]",
                "[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
                "[resourceId('Microsoft.Web/connections', variables('TeamsConnectionName'))]"
            ]
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('AzureadConnectionName')]",
            "location": "[resourceGroup().location]",
            "kind": "V1",
            "properties": {
                "displayName": "[variables('AzureadConnectionName')]",
                "customParameterValues": {},
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Azuread')]"
                }
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('MicrosoftSentinelConnectionName')]",
            "location": "[resourceGroup().location]",
            "kind": "V1",
            "properties": {
                "displayName": "[variables('MicrosoftSentinelConnectionName')]",
                "customParameterValues": {},
                "parameterValueType": "Alternative",
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Azuresentinel')]"
                }
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('TeamsConnectionName')]",
            "location": "[resourceGroup().location]",
            "kind": "V1",
            "properties": {
                "displayName": "[variables('TeamsConnectionName')]",
                "customParameterValues": {},
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Teams')]"
                }
            }
        }
    ]
}