{
    "$schema":  "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion":  "1.0.0.0",
    "parameters":  {
        "PlaybookName":  {
            "defaultValue":  "OwnerPrompt-BlockUser",
            "type":  "string"
        },
        "Storage account blob container name":  {
            "type":  "String",
            "metadata":  {
                "description":  "Enter value for Storage account blob container name"
            }
        }
    },
    "variables":  {
        "AzureadConnectionName":  "[concat('Azuread-', parameters('PlaybookName'))]",
        "AzureblobConnectionName":  "[concat('Azureblob-', parameters('PlaybookName'))]",
        "MicrosoftSentinelConnectionName":  "[concat('MicrosoftSentinel-', parameters('PlaybookName'))]",
        "TeamsConnectionName":  "[concat('Teams-', parameters('PlaybookName'))]"
    },
    "resources":  [
        {
            "properties":  {
                "provisioningState":  "Succeeded",
                "state":  "Enabled",
                "definition":  {
                    "$schema":  "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion":  "1.0.0.0",
                    "parameters":  {
                        "$connections":  {
                            "defaultValue":  {
                            },
                            "type":  "Object"
                        },
                        "Storage account blob container name":  {
                            "defaultValue":  "[parameters('Storage account blob container name')]",
                            "type":  "String"
                        }
                    },
                    "triggers":  {
                        "Microsoft_Sentinel_incident":  {
                            "type":  "ApiConnectionWebhook",
                            "inputs":  {
                                "body":  {
                                    "callback_url":  "@{listCallbackUrl()}"
                                },
                                "host":  {
                                    "connection":  {
                                        "name":  "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "path":  "/incident-creation"
                            }
                        }
                    },
                    "actions":  {
                        "Compose":  {
                            "runAfter":  {
                                "Initialize_variable_2":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "Compose",
                            "inputs":  {
                                "$schema":  "http://adaptivecards.io/schemas/adaptive-card.json",
                                "actions":  [
                                    {
                                        "data":  {
                                            "x":  "confirm"
                                        },
                                        "title":  "Submit response!",
                                        "type":  "Action.Submit"
                                    }
                                ],
                                "body":  [
                                    {
                                        "size":  "Small",
                                        "style":  "Person",
                                        "type":  "Image",
                                        "url":  "https://connectoricons-prod.azureedge.net/releases/v1.0.1391/1.0.1391.2130/azuresentinel/icon.png"
                                    },
                                    {
                                        "size":  "Large",
                                        "text":  "Gebruiker(s) blokkeren:",
                                        "type":  "TextBlock",
                                        "wrap":  true
                                    },
                                    {
                                        "text":  "[[Bekijk hier het incident]](@{triggerBody()?['object']?['properties']?['incidentUrl']})",
                                        "type":  "TextBlock",
                                        "wrap":  true
                                    },
                                    {
                                        "choices":  [
                                            "@variables('Users')"
                                        ],
                                        "errorMessage":  "Kies minstens 1 gebruiker",
                                        "id":  "entities",
                                        "isMultiSelect":  true,
                                        "isRequired":  true,
                                        "label":  "Kies één of meerdere gebruikers om te blokkeren.",
                                        "type":  "Input.ChoiceSet"
                                    },
                                    {
                                        "choices":  [
                                            {
                                                "title":  "x",
                                                "value":  "x"
                                            }
                                        ],
                                        "errorMessage":  "Kies minstens één actie!",
                                        "id":  "acties",
                                        "isMultiSelect":  true,
                                        "isRequired":  true,
                                        "label":  "Kies één of meerdere acties om te ondernemen.",
                                        "separator":  true,
                                        "style":  "expanded",
                                        "type":  "Input.ChoiceSet"
                                    }
                                ],
                                "type":  "AdaptiveCard",
                                "version":  "1.3"
                            }
                        },
                        "Compose_2":  {
                            "runAfter":  {
                                "Compose":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "Compose",
                            "inputs":  "@replace(replace(replace(string(outputs('Compose')),'\"//BEGIN', ''), '//EINDE\"', ''), '\\\"', '\"')"
                        },
                        "Create_blob_(V2)":  {
                            "runAfter":  {
                                "Initialize_variable_3":  [
                                    "Succeeded"
                                ],
                                "Post_adaptive_card_and_wait_for_a_response":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "ApiConnection",
                            "inputs":  {
                                "body":  "@body('Post_adaptive_card_and_wait_for_a_response')?['data']?['entities']",
                                "headers":  {
                                    "ReadFileMetadataFromServer":  true
                                },
                                "host":  {
                                    "connection":  {
                                        "name":  "@parameters('$connections')['azureblob']['connectionId']"
                                    }
                                },
                                "method":  "post",
                                "path":  "/v2/datasets/@{encodeURIComponent(encodeURIComponent('AccountNameFromSettings'))}/files",
                                "queries":  {
                                    "folderPath":  "/@{parameters('Storage account blob container name')}",
                                    "name":  "@variables('Blob')",
                                    "queryParametersSingleEncoded":  true
                                }
                            },
                            "runtimeConfiguration":  {
                                "contentTransfer":  {
                                    "transferMode":  "Chunked"
                                }
                            }
                        },
                        "Entities_-_Get_Accounts":  {
                            "runAfter":  {
                            },
                            "type":  "ApiConnection",
                            "inputs":  {
                                "body":  "@triggerBody()?['object']?['properties']?['relatedEntities']",
                                "host":  {
                                    "connection":  {
                                        "name":  "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "method":  "post",
                                "path":  "/entities/account"
                            }
                        },
                        "For_each":  {
                            "foreach":  "@body('Entities_-_Get_Accounts')?['Accounts']",
                            "actions":  {
                                "Append_to_string_variable":  {
                                    "runAfter":  {
                                        "Get_user":  [
                                            "Succeeded"
                                        ]
                                    },
                                    "type":  "AppendToStringVariable",
                                    "inputs":  {
                                        "name":  "UsersKomma",
                                        "value":  "{\"title\": \"@{body('Get_user')?['displayName']}\",\"value\" :\"@{body('Get_user')?['mail']}\"},"
                                    }
                                },
                                "Get_user":  {
                                    "runAfter":  {
                                    },
                                    "type":  "ApiConnection",
                                    "inputs":  {
                                        "host":  {
                                            "connection":  {
                                                "name":  "@parameters('$connections')['azuread']['connectionId']"
                                            }
                                        },
                                        "method":  "get",
                                        "path":  "/v1.0/users/@{encodeURIComponent(items('For_each')?['AadUserId'])}"
                                    }
                                }
                            },
                            "runAfter":  {
                                "Entities_-_Get_Accounts":  [
                                    "Succeeded"
                                ],
                                "Initialize_variable":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "Foreach"
                        },
                        "Initialize_variable":  {
                            "runAfter":  {
                            },
                            "type":  "InitializeVariable",
                            "inputs":  {
                                "variables":  [
                                    {
                                        "name":  "UsersKomma",
                                        "type":  "string"
                                    }
                                ]
                            }
                        },
                        "Initialize_variable_2":  {
                            "runAfter":  {
                                "For_each":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "InitializeVariable",
                            "inputs":  {
                                "variables":  [
                                    {
                                        "name":  "Users",
                                        "type":  "string",
                                        "value":  "@{concat('//BEGIN', substring(variables('UsersKomma'),0,sub(length(variables('UsersKomma')),1)), '//EINDE')}"
                                    }
                                ]
                            }
                        },
                        "Initialize_variable_3":  {
                            "runAfter":  {
                                "Compose_2":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "InitializeVariable",
                            "inputs":  {
                                "variables":  [
                                    {
                                        "name":  "Blob",
                                        "type":  "string",
                                        "value":  "@{split(replace(triggerBody()?['object']?['properties']?['owner']?['email'], '.', ''), '@')[0]}@{triggerBody()?['object']?['properties']?['incidentNumber']}"
                                    }
                                ]
                            }
                        },
                        "Post_adaptive_card_and_wait_for_a_response":  {
                            "runAfter":  {
                                "Compose_2":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "ApiConnectionWebhook",
                            "inputs":  {
                                "body":  {
                                    "body":  {
                                        "messageBody":  "@{outputs('Compose_2')}",
                                        "recipient":  {
                                            "to":  "@triggerBody()?['object']?['properties']?['owner']?['email']"
                                        },
                                        "updateMessage":  "Thanks for your response!"
                                    },
                                    "notificationUrl":  "@{listCallbackUrl()}"
                                },
                                "host":  {
                                    "connection":  {
                                        "name":  "@parameters('$connections')['teams']['connectionId']"
                                    }
                                },
                                "path":  "/v1.0/teams/conversation/gatherinput/poster/Flow bot/location/@{encodeURIComponent('Chat with Flow bot')}/$subscriptions"
                            }
                        }
                    },
                    "outputs":  {
                    }
                },
                "parameters":  {
                    "$connections":  {
                        "value":  {
                            "azuread":  {
                                "connectionId":  "[resourceId('Microsoft.Web/connections', variables('AzureadConnectionName'))]",
                                "connectionName":  "[variables('AzureadConnectionName')]",
                                "id":  "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Azuread')]"
                            },
                            "azureblob":  {
                                "connectionId":  "[resourceId('Microsoft.Web/connections', variables('AzureblobConnectionName'))]",
                                "connectionName":  "[variables('AzureblobConnectionName')]",
                                "id":  "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Azureblob')]"
                            },
                            "azuresentinel":  {
                                "connectionId":  "[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
                                "connectionName":  "[variables('MicrosoftSentinelConnectionName')]",
                                "id":  "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Azuresentinel')]",
                                "connectionProperties":  {
                                    "authentication":  {
                                        "type":  "ManagedServiceIdentity"
                                    }
                                }
                            },
                            "teams":  {
                                "connectionId":  "[resourceId('Microsoft.Web/connections', variables('TeamsConnectionName'))]",
                                "connectionName":  "[variables('TeamsConnectionName')]",
                                "id":  "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Teams')]"
                            }
                        }
                    }
                }
            },
            "name":  "[parameters('PlaybookName')]",
            "type":  "Microsoft.Logic/workflows",
            "location":  "[resourceGroup().location]",
            "tags":  {
                "use case":  "5"
            },
            "identity":  {
                "type":  "SystemAssigned"
            },
            "apiVersion":  "2017-07-01",
            "dependsOn":  [
                "[resourceId('Microsoft.Web/connections', variables('AzureadConnectionName'))]",
                "[resourceId('Microsoft.Web/connections', variables('AzureblobConnectionName'))]",
                "[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
                "[resourceId('Microsoft.Web/connections', variables('TeamsConnectionName'))]"
            ]
        },
        {
            "type":  "Microsoft.Web/connections",
            "apiVersion":  "2016-06-01",
            "name":  "[variables('AzureadConnectionName')]",
            "location":  "[resourceGroup().location]",
            "kind":  "V1",
            "properties":  {
                "displayName":  "[variables('AzureadConnectionName')]",
                "customParameterValues":  {
                },
                "api":  {
                    "id":  "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Azuread')]"
                }
            }
        },
        {
            "type":  "Microsoft.Web/connections",
            "apiVersion":  "2016-06-01",
            "name":  "[variables('AzureblobConnectionName')]",
            "location":  "[resourceGroup().location]",
            "kind":  "V1",
            "properties":  {
                "displayName":  "[variables('AzureblobConnectionName')]",
                "customParameterValues":  {
                },
                "api":  {
                    "id":  "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Azureblob')]"
                }
            }
        },
        {
            "type":  "Microsoft.Web/connections",
            "apiVersion":  "2016-06-01",
            "name":  "[variables('MicrosoftSentinelConnectionName')]",
            "location":  "[resourceGroup().location]",
            "kind":  "V1",
            "properties":  {
                "displayName":  "[variables('MicrosoftSentinelConnectionName')]",
                "customParameterValues":  {
                },
                "parameterValueType":  "Alternative",
                "api":  {
                    "id":  "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Azuresentinel')]"
                }
            }
        },
        {
            "type":  "Microsoft.Web/connections",
            "apiVersion":  "2016-06-01",
            "name":  "[variables('TeamsConnectionName')]",
            "location":  "[resourceGroup().location]",
            "kind":  "V1",
            "properties":  {
                "displayName":  "[variables('TeamsConnectionName')]",
                "customParameterValues":  {
                },
                "api":  {
                    "id":  "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Teams')]"
                }
            }
        }
    ]
}
