{
    "$schema":  "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion":  "1.0.0.0",
    "parameters":  {
        "PlaybookName":  {
            "defaultValue":  "NegeerIncident",
            "type":  "string"
        }
    },
    "variables":  {
        "SentineltriageassistantConnectionName":  "SentinelTriageAssistant",
        "AzureadConnectionName":  "[concat('Azuread-', parameters('PlaybookName'))]",
        "MicrosoftSentinelConnectionName":  "[concat('MicrosoftSentinel-', parameters('PlaybookName'))]",
        "TeamsConnectionName":  "[concat('Teams-', parameters('PlaybookName'))]"
    },
    "resources":  [
        {
            "properties":  {
                "provisioningState":  "Succeeded",
                "state":  "Enabled",
                "definition":  {
                    "$schema":  "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion":  "1.0.0.0",
                    "parameters":  {
                        "$connections":  {
                            "defaultValue":  {
                            },
                            "type":  "Object"
                        }
                    },
                    "triggers":  {
                        "Microsoft_Sentinel_incident":  {
                            "type":  "ApiConnectionWebhook",
                            "inputs":  {
                                "body":  {
                                    "callback_url":  "@{listCallbackUrl()}"
                                },
                                "host":  {
                                    "connection":  {
                                        "name":  "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "path":  "/incident-creation"
                            }
                        }
                    },
                    "actions":  {
                        "Condition_-_1_entity":  {
                            "actions":  {
                                "Terminate":  {
                                    "runAfter":  {
                                    },
                                    "type":  "Terminate",
                                    "inputs":  {
                                        "runStatus":  "Cancelled"
                                    }
                                }
                            },
                            "runAfter":  {
                                "Entities_-_Get_Accounts":  [
                                    "Succeeded"
                                ]
                            },
                            "expression":  {
                                "and":  [
                                    {
                                        "not":  {
                                            "equals":  [
                                                "@length(body('Entities_-_Get_Accounts')?['Accounts'])",
                                                1
                                            ]
                                        }
                                    }
                                ]
                            },
                            "type":  "If"
                        },
                        "Condition_-_Watchlist_bevat_entity":  {
                            "actions":  {
                                "Add_comment_to_incident_(V3)":  {
                                    "runAfter":  {
                                        "Update_incident":  [
                                            "Succeeded"
                                        ]
                                    },
                                    "type":  "ApiConnection",
                                    "inputs":  {
                                        "body":  {
                                            "incidentArmId":  "@body('Update_incident')?['id']",
                                            "message":  "\u003cp\u003e@{variables('usermail')} heeft zijn Sentinel incidenten gesnoozed en deze timer verloopt om:\u003cbr\u003e\n@{variables('EindTijd')}\u003c/p\u003e"
                                        },
                                        "host":  {
                                            "connection":  {
                                                "name":  "@parameters('$connections')['azuresentinel']['connectionId']"
                                            }
                                        },
                                        "method":  "post",
                                        "path":  "/Incidents/Comment"
                                    }
                                },
                                "Update_incident":  {
                                    "runAfter":  {
                                    },
                                    "type":  "ApiConnection",
                                    "inputs":  {
                                        "body":  {
                                            "incidentArmId":  "@triggerBody()?['object']?['id']",
                                            "severity":  "Informational",
                                            "tagsToAdd":  {
                                                "TagsToAdd":  [
                                                    {
                                                        "Tag":  "snoozed"
                                                    },
                                                    {
                                                        "Tag":  "automated"
                                                    }
                                                ]
                                            }
                                        },
                                        "host":  {
                                            "connection":  {
                                                "name":  "@parameters('$connections')['azuresentinel']['connectionId']"
                                            }
                                        },
                                        "method":  "put",
                                        "path":  "/Incidents"
                                    }
                                }
                            },
                            "runAfter":  {
                                "For_each_-_Watchlist_bevat_entity":  [
                                    "Succeeded"
                                ]
                            },
                            "else":  {
                                "actions":  {
                                    "Base_Module":  {
                                        "runAfter":  {
                                        },
                                        "type":  "ApiConnection",
                                        "inputs":  {
                                            "body":  {
                                                "AddAccountComments":  false,
                                                "AddIPComments":  false,
                                                "EnrichIPsWithGeoData":  false,
                                                "Entities":  "@triggerBody()?['object']?['properties']?['relatedEntities']",
                                                "IncidentARMId":  "@triggerBody()?['object']?['id']",
                                                "WorkspaceId":  "@triggerBody()?['workspaceId']"
                                            },
                                            "host":  {
                                                "connection":  {
                                                    "name":  "@parameters('$connections')['SentinelTriageAssistant']['connectionId']"
                                                }
                                            },
                                            "method":  "post",
                                            "path":  "/workflows/6e68021fa52540d6975742339365ff09/triggers/manual/paths/invoke/func/base",
                                            "queries":  {
                                                "api-version":  "2016-10-01",
                                                "sig":  "oRIkZcdtOkQcUPEaTqPFeLlr_7bkILYWDf5voVpLKG8",
                                                "sp":  "/triggers/manual/run",
                                                "sv":  "1.0"
                                            }
                                        }
                                    },
                                    "Condition_-_Meer_dan_2_alerts":  {
                                        "actions":  {
                                            "Compose":  {
                                                "runAfter":  {
                                                },
                                                "type":  "Compose",
                                                "inputs":  {
                                                    "$schema":  "http://adaptivecards.io/schemas/adaptive-card.json",
                                                    "actions":  [
                                                        {
                                                            "data":  {
                                                                "x":  "confirm"
                                                            },
                                                            "title":  "Submit response!",
                                                            "type":  "Action.Submit"
                                                        }
                                                    ],
                                                    "body":  [
                                                        {
                                                            "size":  "Small",
                                                            "style":  "Person",
                                                            "type":  "Image",
                                                            "url":  "https://connectoricons-prod.azureedge.net/releases/v1.0.1391/1.0.1391.2130/azuresentinel/icon.png"
                                                        },
                                                        {
                                                            "size":  "Large",
                                                            "text":  "Meer dan 2 alerts veroorzaakt.",
                                                            "type":  "TextBlock",
                                                            "wrap":  true
                                                        },
                                                        {
                                                            "errorMessage":  "Geef max. 5 dagen in!",
                                                            "id":  "dagen",
                                                            "isRequired":  true,
                                                            "label":  "Dagen:",
                                                            "max":  4,
                                                            "min":  0,
                                                            "separator":  true,
                                                            "type":  "Input.Number",
                                                            "value":  0
                                                        },
                                                        {
                                                            "errorMessage":  "Geef een geldig uur in!",
                                                            "id":  "uren",
                                                            "isRequired":  true,
                                                            "label":  "Uren:",
                                                            "max":  23,
                                                            "min":  0,
                                                            "type":  "Input.Number",
                                                            "value":  0
                                                        },
                                                        {
                                                            "errorMessage":  "Geef een geldig aantal minuten in!",
                                                            "id":  "minuten",
                                                            "isRequired":  true,
                                                            "label":  "Minuten:",
                                                            "max":  59,
                                                            "min":  0,
                                                            "type":  "Input.Number",
                                                            "value":  0
                                                        }
                                                    ],
                                                    "type":  "AdaptiveCard",
                                                    "version":  "1.3"
                                                }
                                            },
                                            "Condition_-_meer_dan_10_min":  {
                                                "actions":  {
                                                    "Add_comment_to_incident_(V3)_2":  {
                                                        "runAfter":  {
                                                            "Post_message_in_a_chat_or_channel_2":  [
                                                                "Succeeded"
                                                            ]
                                                        },
                                                        "type":  "ApiConnection",
                                                        "inputs":  {
                                                            "body":  {
                                                                "incidentArmId":  "@triggerBody()?['object']?['id']",
                                                                "message":  "\u003cp\u003e@{variables('usermail')} heeft zijn Sentinel incidenten gesnoozed en deze timer verloopt om:\u003cbr\u003e\n@{variables('EindTijd')}\u003c/p\u003e"
                                                            },
                                                            "host":  {
                                                                "connection":  {
                                                                    "name":  "@parameters('$connections')['azuresentinel']['connectionId']"
                                                                }
                                                            },
                                                            "method":  "post",
                                                            "path":  "/Incidents/Comment"
                                                        }
                                                    },
                                                    "Increment_variable":  {
                                                        "runAfter":  {
                                                        },
                                                        "type":  "IncrementVariable",
                                                        "inputs":  {
                                                            "name":  "minuten",
                                                            "value":  0
                                                        }
                                                    },
                                                    "Post_message_in_a_chat_or_channel":  {
                                                        "runAfter":  {
                                                            "Watchlists_-_Add_a_new_Watchlist_Item":  [
                                                                "Succeeded"
                                                            ]
                                                        },
                                                        "type":  "ApiConnection",
                                                        "inputs":  {
                                                            "body":  {
                                                                "messageBody":  "\u003cp\u003eSentinel snoozer ingezet.\u003cbr\u003e\n\u003cbr\u003e\n\u003cem\u003eEinde van snoozer\u003c/em\u003e:\u003cbr\u003e\n@{convertTimeZone(addMinutes(utcNow(), variables('minuten')), 'UTC', 'Romance Standard Time', 'dd/MM/yyyy HH:mm:ss')}\u003c/p\u003e",
                                                                "recipient":  "@variables('usermail')"
                                                            },
                                                            "host":  {
                                                                "connection":  {
                                                                    "name":  "@parameters('$connections')['teams_1']['connectionId']"
                                                                }
                                                            },
                                                            "method":  "post",
                                                            "path":  "/beta/teams/conversation/message/poster/Flow bot/location/@{encodeURIComponent('Chat with Flow bot')}"
                                                        }
                                                    },
                                                    "Post_message_in_a_chat_or_channel_2":  {
                                                        "runAfter":  {
                                                            "Watchlists_-_Delete_a_Watchlist_Item":  [
                                                                "Succeeded"
                                                            ]
                                                        },
                                                        "type":  "ApiConnection",
                                                        "inputs":  {
                                                            "body":  {
                                                                "messageBody":  "\\u003e\u003cspan style=\"font-size: 18px\"\u003e\u003cstrong\u003eSentinel incident snooze timer verlopen.\u003c/strong\u003e\u003c/span\u003e\u003c/p\u003e",
                                                                "recipient":  "@variables('usermail')"
                                                            },
                                                            "host":  {
                                                                "connection":  {
                                                                    "name":  "@parameters('$connections')['teams_1']['connectionId']"
                                                                }
                                                            },
                                                            "method":  "post",
                                                            "path":  "/beta/teams/conversation/message/poster/Flow bot/location/@{encodeURIComponent('Chat with Flow bot')}"
                                                        }
                                                    },
                                                    "Until":  {
                                                        "actions":  {
                                                            "Delay":  {
                                                                "runAfter":  {
                                                                },
                                                                "type":  "Wait",
                                                                "inputs":  {
                                                                    "interval":  {
                                                                        "count":  "@variables('minuten')",
                                                                        "unit":  "Minute"
                                                                    }
                                                                }
                                                            },
                                                            "Set_variable_-_tijdvoorbij":  {
                                                                "runAfter":  {
                                                                    "Delay":  [
                                                                        "Succeeded"
                                                                    ]
                                                                },
                                                                "type":  "SetVariable",
                                                                "inputs":  {
                                                                    "name":  "tijdvoorbij",
                                                                    "value":  true
                                                                }
                                                            }
                                                        },
                                                        "runAfter":  {
                                                            "Increment_variable":  [
                                                                "Succeeded"
                                                            ]
                                                        },
                                                        "expression":  "@equals(variables('tijdvoorbij'), true)",
                                                        "limit":  {
                                                            "count":  1,
                                                            "timeout":  "P5D"
                                                        },
                                                        "type":  "Until"
                                                    },
                                                    "Watchlists_-_Add_a_new_Watchlist_Item":  {
                                                        "runAfter":  {
                                                            "Increment_variable":  [
                                                                "Succeeded"
                                                            ]
                                                        },
                                                        "type":  "ApiConnection",
                                                        "inputs":  {
                                                            "body":  {
                                                                "EindTijd":  "@convertTimeZone(addMinutes(utcNow(), variables('minuten')), 'UTC', 'Romance Standard Time', 'dd/MM/yyyy HH:mm:ss')",
                                                                "ID":  "@body('Get_user')?['id']",
                                                                "Naam":  "@body('Get_user')?['displayName']"
                                                            },
                                                            "host":  {
                                                                "connection":  {
                                                                    "name":  "@parameters('$connections')['azuresentinel']['connectionId']"
                                                                }
                                                            },
                                                            "method":  "put",
                                                            "path":  "/Watchlists/subscriptions/@{encodeURIComponent(triggerBody()?['workspaceInfo']?['SubscriptionId'])}/resourceGroups/@{encodeURIComponent(triggerBody()?['workspaceInfo']?['ResourceGroupName'])}/workspaces/@{encodeURIComponent(triggerBody()?['workspaceId'])}/watchlists/@{encodeURIComponent('NegeerIncident')}/watchlistItem"
                                                        }
                                                    },
                                                    "Watchlists_-_Delete_a_Watchlist_Item":  {
                                                        "runAfter":  {
                                                            "Post_message_in_a_chat_or_channel":  [
                                                                "Succeeded"
                                                            ],
                                                            "Until":  [
                                                                "Succeeded"
                                                            ]
                                                        },
                                                        "type":  "ApiConnection",
                                                        "inputs":  {
                                                            "host":  {
                                                                "connection":  {
                                                                    "name":  "@parameters('$connections')['azuresentinel']['connectionId']"
                                                                }
                                                            },
                                                            "method":  "delete",
                                                            "path":  "/Watchlists/subscriptions/@{encodeURIComponent(triggerBody()?['workspaceInfo']?['SubscriptionId'])}/resourceGroups/@{encodeURIComponent(triggerBody()?['workspaceInfo']?['ResourceGroupName'])}/workspaces/@{encodeURIComponent(triggerBody()?['workspaceId'])}/watchlists/@{encodeURIComponent('NegeerIncident')}/watchlistItem/@{encodeURIComponent(body('Watchlists_-_Add_a_new_Watchlist_Item')?['name'])}"
                                                        }
                                                    }
                                                },
                                                "runAfter":  {
                                                    "Set_variable_-_minuten":  [
                                                        "Succeeded"
                                                    ]
                                                },
                                                "expression":  {
                                                    "and":  [
                                                        {
                                                            "greater":  [
                                                                "@variables('minuten')",
                                                                0
                                                            ]
                                                        }
                                                    ]
                                                },
                                                "type":  "If"
                                            },
                                            "Post_adaptive_card_and_wait_for_a_response":  {
                                                "runAfter":  {
                                                    "Compose":  [
                                                        "Succeeded"
                                                    ]
                                                },
                                                "type":  "ApiConnectionWebhook",
                                                "inputs":  {
                                                    "body":  {
                                                        "body":  {
                                                            "messageBody":  "@{outputs('Compose')}",
                                                            "recipient":  {
                                                                "to":  "@variables('usermail')"
                                                            },
                                                            "updateMessage":  "Thanks for your response!"
                                                        },
                                                        "notificationUrl":  "@{listCallbackUrl()}"
                                                    },
                                                    "host":  {
                                                        "connection":  {
                                                            "name":  "@parameters('$connections')['teams_1']['connectionId']"
                                                        }
                                                    },
                                                    "path":  "/v1.0/teams/conversation/gatherinput/poster/Flow bot/location/@{encodeURIComponent('Chat with Flow bot')}/$subscriptions"
                                                }
                                            },
                                            "Set_variable_-_minuten":  {
                                                "runAfter":  {
                                                    "Post_adaptive_card_and_wait_for_a_response":  [
                                                        "Succeeded"
                                                    ]
                                                },
                                                "type":  "SetVariable",
                                                "inputs":  {
                                                    "name":  "minuten",
                                                    "value":  "@add(add(mul(int(body('Post_adaptive_card_and_wait_for_a_response')?['data']?['dagen']), 1440), mul(int(body('Post_adaptive_card_and_wait_for_a_response')?['data']?['uren']), 60)), int(body('Post_adaptive_card_and_wait_for_a_response')?['data']?['minuten']))"
                                                }
                                            }
                                        },
                                        "runAfter":  {
                                            "Related_Alerts_Module":  [
                                                "Succeeded"
                                            ]
                                        },
                                        "expression":  {
                                            "and":  [
                                                {
                                                    "greaterOrEquals":  [
                                                        "@body('Related_Alerts_Module')?['RelatedAccountAlertsCount']",
                                                        2
                                                    ]
                                                }
                                            ]
                                        },
                                        "type":  "If"
                                    },
                                    "Related_Alerts_Module":  {
                                        "runAfter":  {
                                            "Base_Module":  [
                                                "Succeeded"
                                            ]
                                        },
                                        "type":  "ApiConnection",
                                        "inputs":  {
                                            "body":  {
                                                "AddIncidentComments":  false,
                                                "BaseModuleBody":  "@{body('Base_Module')}",
                                                "CheckAccounts":  true,
                                                "CheckHosts":  false,
                                                "CheckIPs":  false,
                                                "LookbackInDays":  45
                                            },
                                            "host":  {
                                                "connection":  {
                                                    "name":  "@parameters('$connections')['SentinelTriageAssistant']['connectionId']"
                                                }
                                            },
                                            "method":  "post",
                                            "path":  "/workflows/6e68021fa52540d6975742339365ff09/triggers/manual/paths/invoke/func/relatedalerts",
                                            "queries":  {
                                                "api-version":  "2016-10-01",
                                                "sig":  "oRIkZcdtOkQcUPEaTqPFeLlr_7bkILYWDf5voVpLKG8",
                                                "sp":  "/triggers/manual/run",
                                                "sv":  "1.0"
                                            }
                                        }
                                    }
                                }
                            },
                            "expression":  {
                                "and":  [
                                    {
                                        "equals":  [
                                            "@variables('BevatEntity')",
                                            true
                                        ]
                                    }
                                ]
                            },
                            "type":  "If"
                        },
                        "Entities_-_Get_Accounts":  {
                            "runAfter":  {
                            },
                            "type":  "ApiConnection",
                            "inputs":  {
                                "body":  "@triggerBody()?['object']?['properties']?['relatedEntities']",
                                "host":  {
                                    "connection":  {
                                        "name":  "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "method":  "post",
                                "path":  "/entities/account"
                            }
                        },
                        "For_each_-_Watchlist_bevat_entity":  {
                            "foreach":  "@body('Get_watchlist')?['properties']?['watchlistItems']",
                            "actions":  {
                                "Condition_-_BevatEntity":  {
                                    "actions":  {
                                        "Set_variable_-_BevatEntity":  {
                                            "runAfter":  {
                                            },
                                            "type":  "SetVariable",
                                            "inputs":  {
                                                "name":  "BevatEntity",
                                                "value":  true
                                            }
                                        },
                                        "Set_variable_-_EindTijd":  {
                                            "runAfter":  {
                                                "Set_variable_-_BevatEntity":  [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type":  "SetVariable",
                                            "inputs":  {
                                                "name":  "EindTijd",
                                                "value":  "@{items('For_each_-_Watchlist_bevat_entity')?['properties.itemsKeyValue']?['EindTijd']}"
                                            }
                                        }
                                    },
                                    "runAfter":  {
                                    },
                                    "expression":  {
                                        "and":  [
                                            {
                                                "equals":  [
                                                    "@items('For_each_-_Watchlist_bevat_entity')?['properties.itemsKeyValue']?['ID']",
                                                    "@variables('entityid')"
                                                ]
                                            }
                                        ]
                                    },
                                    "type":  "If"
                                }
                            },
                            "runAfter":  {
                                "Initialize_variable":  [
                                    "Succeeded"
                                ],
                                "Initialize_variable_-_tijdvoorbij":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "Foreach"
                        },
                        "Get_user":  {
                            "runAfter":  {
                                "Get_watchlist":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "ApiConnection",
                            "inputs":  {
                                "host":  {
                                    "connection":  {
                                        "name":  "@parameters('$connections')['azuread']['connectionId']"
                                    }
                                },
                                "method":  "get",
                                "path":  "/v1.0/users/@{encodeURIComponent(body('Entities_-_Get_Accounts')?['Accounts'][0]['AadUserId'])}"
                            }
                        },
                        "Get_watchlist":  {
                            "runAfter":  {
                                "Condition_-_1_entity":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "ApiConnection",
                            "inputs":  {
                                "host":  {
                                    "connection":  {
                                        "name":  "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "method":  "get",
                                "path":  "/V2/Watchlists/subscriptions/@{encodeURIComponent(triggerBody()?['workspaceInfo']?['SubscriptionId'])}/resourceGroups/@{encodeURIComponent(triggerBody()?['workspaceInfo']?['ResourceGroupName'])}/workspaces/@{encodeURIComponent(triggerBody()?['workspaceId'])}/watchlists/@{encodeURIComponent('NegeerIncident')}/watchlistItems/"
                            }
                        },
                        "Initialize_variable":  {
                            "runAfter":  {
                                "Initialize_variable_-_usermail":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "InitializeVariable",
                            "inputs":  {
                                "variables":  [
                                    {
                                        "name":  "EindTijd",
                                        "type":  "string"
                                    }
                                ]
                            }
                        },
                        "Initialize_variable_-_BevatEntity":  {
                            "runAfter":  {
                                "Initialize_variable_-_entityid":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "InitializeVariable",
                            "inputs":  {
                                "variables":  [
                                    {
                                        "name":  "BevatEntity",
                                        "type":  "boolean",
                                        "value":  false
                                    }
                                ]
                            }
                        },
                        "Initialize_variable_-_entityid":  {
                            "runAfter":  {
                                "Condition_-_1_entity":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "InitializeVariable",
                            "inputs":  {
                                "variables":  [
                                    {
                                        "name":  "entityid",
                                        "type":  "string",
                                        "value":  "@{body('Entities_-_Get_Accounts')?['Accounts']?[0]?['aadUserId']}"
                                    }
                                ]
                            }
                        },
                        "Initialize_variable_-_minuten":  {
                            "runAfter":  {
                                "Initialize_variable_-_BevatEntity":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "InitializeVariable",
                            "inputs":  {
                                "variables":  [
                                    {
                                        "name":  "minuten",
                                        "type":  "integer"
                                    }
                                ]
                            }
                        },
                        "Initialize_variable_-_tijdvoorbij":  {
                            "runAfter":  {
                                "Initialize_variable_-_minuten":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "InitializeVariable",
                            "inputs":  {
                                "variables":  [
                                    {
                                        "name":  "tijdvoorbij",
                                        "type":  "boolean",
                                        "value":  false
                                    }
                                ]
                            }
                        },
                        "Initialize_variable_-_usermail":  {
                            "runAfter":  {
                                "Get_user":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "InitializeVariable",
                            "inputs":  {
                                "variables":  [
                                    {
                                        "name":  "usermail",
                                        "type":  "string",
                                        "value":  "@body('Get_user')?['mail']"
                                    }
                                ]
                            }
                        }
                    },
                    "outputs":  {
                    }
                },
                "parameters":  {
                    "$connections":  {
                        "value":  {
                            "SentinelTriageAssistant":  {
                                "connectionId":  "[resourceId('Microsoft.Web/connections', variables('SentineltriageassistantConnectionName'))]",
                                "connectionName":  "[variables('SentineltriageassistantConnectionName')]",
                                "id":  "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Web/customApis/', variables('SentineltriageassistantConnectionName'))]"
                            },
                            "azuread":  {
                                "connectionId":  "[resourceId('Microsoft.Web/connections', variables('AzureadConnectionName'))]",
                                "connectionName":  "[variables('AzureadConnectionName')]",
                                "id":  "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Azuread')]"
                            },
                            "azuresentinel":  {
                                "connectionId":  "[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
                                "connectionName":  "[variables('MicrosoftSentinelConnectionName')]",
                                "id":  "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Azuresentinel')]",
                                "connectionProperties":  {
                                    "authentication":  {
                                        "type":  "ManagedServiceIdentity"
                                    }
                                }
                            },
                            "teams_1":  {
                                "connectionId":  "[resourceId('Microsoft.Web/connections', variables('TeamsConnectionName'))]",
                                "connectionName":  "[variables('TeamsConnectionName')]",
                                "id":  "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Teams')]"
                            }
                        }
                    }
                }
            },
            "name":  "[parameters('PlaybookName')]",
            "type":  "Microsoft.Logic/workflows",
            "location":  "[resourceGroup().location]",
            "tags":  {
                "use case":  "6"
            },
            "identity":  {
                "type":  "SystemAssigned"
            },
            "apiVersion":  "2017-07-01",
            "dependsOn":  [
                "[resourceId('Microsoft.Web/connections', variables('AzureadConnectionName'))]",
                "[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
                "[resourceId('Microsoft.Web/connections', variables('TeamsConnectionName'))]"
            ]
        },
        {
            "type":  "Microsoft.Web/connections",
            "apiVersion":  "2016-06-01",
            "name":  "[variables('AzureadConnectionName')]",
            "location":  "[resourceGroup().location]",
            "kind":  "V1",
            "properties":  {
                "displayName":  "[variables('AzureadConnectionName')]",
                "customParameterValues":  {
                },
                "api":  {
                    "id":  "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Azuread')]"
                }
            }
        },
        {
            "type":  "Microsoft.Web/connections",
            "apiVersion":  "2016-06-01",
            "name":  "[variables('MicrosoftSentinelConnectionName')]",
            "location":  "[resourceGroup().location]",
            "kind":  "V1",
            "properties":  {
                "displayName":  "[variables('MicrosoftSentinelConnectionName')]",
                "customParameterValues":  {
                },
                "parameterValueType":  "Alternative",
                "api":  {
                    "id":  "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Azuresentinel')]"
                }
            }
        },
        {
            "type":  "Microsoft.Web/connections",
            "apiVersion":  "2016-06-01",
            "name":  "[variables('TeamsConnectionName')]",
            "location":  "[resourceGroup().location]",
            "kind":  "V1",
            "properties":  {
                "displayName":  "[variables('TeamsConnectionName')]",
                "customParameterValues":  {
                },
                "api":  {
                    "id":  "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Teams')]"
                }
            }
        }
    ]
}
