{
    "$schema":  "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion":  "1.0.0.0",
    "metadata":  {
        "title":  "",
        "description":  "",
        "prerequisites":  "",
        "postDeployment":  [
        ],
        "prerequisitesDeployTemplateFile":  "",
        "lastUpdateTime":  "",
        "entities":  [
        ],
        "tags":  [
        ],
        "support":  {
            "tier":  "community",
            "armtemplate":  "Generated from https://github.com/Azure/Azure-Sentinel/tree/master/Tools/Playbook-ARM-Template-Generator"
        },
        "author":  {
            "name":  ""
        }
    },
    "parameters":  {
        "PlaybookName":  {
            "defaultValue":  "UnsanctionedApp",
            "type":  "string"
        }
    },
    "variables":  {
        "AzureadConnectionName":  "[concat('Azuread-', parameters('PlaybookName'))]",
        "MicrosoftSentinelConnectionName":  "[concat('MicrosoftSentinel-', parameters('PlaybookName'))]",
        "TeamsConnectionName":  "[concat('Teams-', parameters('PlaybookName'))]"
    },
    "resources":  [
        {
            "properties":  {
                "provisioningState":  "Succeeded",
                "state":  "Enabled",
                "definition":  {
                    "$schema":  "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion":  "1.0.0.0",
                    "parameters":  {
                        "$connections":  {
                            "defaultValue":  {
                            },
                            "type":  "Object"
                        }
                    },
                    "triggers":  {
                        "Microsoft_Sentinel_incident":  {
                            "type":  "ApiConnectionWebhook",
                            "inputs":  {
                                "body":  {
                                    "callback_url":  "@{listCallbackUrl()}"
                                },
                                "host":  {
                                    "connection":  {
                                        "name":  "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "path":  "/incident-creation"
                            }
                        }
                    },
                    "actions":  {
                        "Add_comment_to_incident_(V3)":  {
                            "runAfter":  {
                                "Compose":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "ApiConnection",
                            "inputs":  {
                                "body":  {
                                    "incidentArmId":  "@triggerBody()?['object']?['id']",
                                    "message":  "\u003cp\u003eTeams message sent to user @{body('Get_user')?['displayName']} - @{body('Get_user')?['mail']} at\u003cbr\u003e\n@{convertTimeZone(utcNow(), 'UTC', 'Romance Standard Time', 'dd/MM/yyyy HH:mm:ss')}.\u003cbr\u003e\nWaiting...\u003c/p\u003e"
                                },
                                "host":  {
                                    "connection":  {
                                        "name":  "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "method":  "post",
                                "path":  "/Incidents/Comment"
                            }
                        },
                        "Compose":  {
                            "runAfter":  {
                                "Get_user":  [
                                    "Succeeded"
                                ],
                                "Parse_JSON":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "Compose",
                            "inputs":  {
                                "$schema":  "http://adaptivecards.io/schemas/adaptive-card.json",
                                "actions":  [
                                    {
                                        "data":  {
                                            "x":  "confirm"
                                        },
                                        "title":  "Submit response!",
                                        "type":  "Action.Submit"
                                    }
                                ],
                                "body":  [
                                    {
                                        "size":  "Small",
                                        "style":  "Person",
                                        "type":  "Image",
                                        "url":  "https://connectoricons-prod.azureedge.net/releases/v1.0.1391/1.0.1391.2130/azuresentinel/icon.png"
                                    },
                                    {
                                        "size":  "Large",
                                        "text":  "Incident: unusual amount of data exchange to an unsanctioned application",
                                        "type":  "TextBlock",
                                        "wrap":  true
                                    },
                                    {
                                        "spacing":  "Medium",
                                        "text":  "Dear @{body('Get_user')?['displayName']},\n\nWe detected that your user account sent x amount of data to application @{body('Parse_JSON')?[0]?['properties']?['appName']} around date and time @{convertTimeZone(triggerBody()?['object']?['properties']?['CreatedTimeUtc'], 'UTC', 'Romance Standard Time', 'dd/MM/yyyy HH:mm:ss')}.\n\nDid you perform these actions? If yes, please provide a business reasoning for these actions.\n\nKind regards,\nyour Incident Response team.",
                                        "type":  "TextBlock",
                                        "wrap":  true
                                    },
                                    {
                                        "size":  "Large",
                                        "spacing":  "Large",
                                        "text":  "Response:",
                                        "type":  "TextBlock",
                                        "weight":  "Bolder"
                                    },
                                    {
                                        "choices":  [
                                            {
                                                "title":  "Yes",
                                                "value":  "yes"
                                            },
                                            {
                                                "title":  "No",
                                                "value":  "no"
                                            }
                                        ],
                                        "errorMessage":  "Please answer the question!",
                                        "id":  "verification",
                                        "isRequired":  true,
                                        "label":  "Were u responsible for this?",
                                        "style":  "expanded",
                                        "type":  "Input.ChoiceSet"
                                    },
                                    {
                                        "id":  "reason",
                                        "isMultiline":  true,
                                        "label":  "If 'yes': please provide a short reasoning:",
                                        "maxLength":  0,
                                        "placeholder":  "Type your text here...",
                                        "type":  "Input.Text"
                                    }
                                ],
                                "type":  "AdaptiveCard",
                                "version":  "1.3"
                            }
                        },
                        "Condition":  {
                            "actions":  {
                                "Add_comment_to_incident_(V3)_2":  {
                                    "runAfter":  {
                                    },
                                    "type":  "ApiConnection",
                                    "inputs":  {
                                        "body":  {
                                            "incidentArmId":  "@triggerBody()?['object']?['id']",
                                            "message":  "\u003cp\u003e\u003cspan style=\"font-size: 16px\"\u003e\u003cstrong\u003eFALSE POSITIVE\u003c/strong\u003e\u003c/span\u003e\u003cbr\u003e\nTeams message received at @{convertTimeZone(utcNow(), 'UTC', 'Romance Standard Time', 'dd/MM/yyyy HH:mm:ss')}. User confirmed he was responsible. The reason:\u003cbr\u003e\n@{body('Post_adaptive_card_and_wait_for_a_response')?['data']?['reason']}\u003c/p\u003e"
                                        },
                                        "host":  {
                                            "connection":  {
                                                "name":  "@parameters('$connections')['azuresentinel']['connectionId']"
                                            }
                                        },
                                        "method":  "post",
                                        "path":  "/Incidents/Comment"
                                    }
                                },
                                "Update_incident_-_low_severity_-_responsible_tag":  {
                                    "runAfter":  {
                                        "Add_comment_to_incident_(V3)_2":  [
                                            "Succeeded"
                                        ]
                                    },
                                    "type":  "ApiConnection",
                                    "inputs":  {
                                        "body":  {
                                            "incidentArmId":  "@triggerBody()?['object']?['id']",
                                            "severity":  "Low",
                                            "tagsToAdd":  {
                                                "TagsToAdd":  [
                                                    {
                                                        "Tag":  "responsible"
                                                    }
                                                ]
                                            }
                                        },
                                        "host":  {
                                            "connection":  {
                                                "name":  "@parameters('$connections')['azuresentinel']['connectionId']"
                                            }
                                        },
                                        "method":  "put",
                                        "path":  "/Incidents"
                                    }
                                }
                            },
                            "runAfter":  {
                                "Add_comment_to_incident_(V3)":  [
                                    "Succeeded"
                                ],
                                "Post_adaptive_card_and_wait_for_a_response":  [
                                    "Succeeded"
                                ]
                            },
                            "else":  {
                                "actions":  {
                                    "Add_comment_to_incident_(V3)_3":  {
                                        "runAfter":  {
                                        },
                                        "type":  "ApiConnection",
                                        "inputs":  {
                                            "body":  {
                                                "incidentArmId":  "@triggerBody()?['object']?['id']",
                                                "message":  "\u003cp\u003e\u003cspan style=\"font-size: 16px\"\u003e\u003cstrong\u003eWARNING\u003c/strong\u003e\u003c/span\u003e\u003cbr\u003e\nTeams message received at @{convertTimeZone(utcNow(), 'UTC', 'Romance Standard Time', 'dd/MM/yyyy HH:mm:ss')}. user does \u003cstrong\u003enot \u003c/strong\u003eclaim to be responsible. Further triaging and investigation is required.\u003c/p\u003e"
                                            },
                                            "host":  {
                                                "connection":  {
                                                    "name":  "@parameters('$connections')['azuresentinel']['connectionId']"
                                                }
                                            },
                                            "method":  "post",
                                            "path":  "/Incidents/Comment"
                                        }
                                    },
                                    "Update_incident_-_high_severity_-_not_responsible_tag":  {
                                        "runAfter":  {
                                            "Add_comment_to_incident_(V3)_3":  [
                                                "Succeeded"
                                            ]
                                        },
                                        "type":  "ApiConnection",
                                        "inputs":  {
                                            "body":  {
                                                "incidentArmId":  "@triggerBody()?['object']?['id']",
                                                "severity":  "High",
                                                "tagsToAdd":  {
                                                    "TagsToAdd":  [
                                                        {
                                                            "Tag":  "not_responsible"
                                                        }
                                                    ]
                                                }
                                            },
                                            "host":  {
                                                "connection":  {
                                                    "name":  "@parameters('$connections')['azuresentinel']['connectionId']"
                                                }
                                            },
                                            "method":  "put",
                                            "path":  "/Incidents"
                                        }
                                    }
                                }
                            },
                            "expression":  {
                                "and":  [
                                    {
                                        "equals":  [
                                            "@body('Post_adaptive_card_and_wait_for_a_response')?['data']?['verification']",
                                            "yes"
                                        ]
                                    }
                                ]
                            },
                            "type":  "If"
                        },
                        "Entities_-_Get_Accounts":  {
                            "runAfter":  {
                            },
                            "type":  "ApiConnection",
                            "inputs":  {
                                "body":  "@triggerBody()?['object']?['properties']?['relatedEntities']",
                                "host":  {
                                    "connection":  {
                                        "name":  "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "method":  "post",
                                "path":  "/entities/account"
                            }
                        },
                        "Filter_array_-_CloudApplication_entity":  {
                            "runAfter":  {
                                "Initialize_variable_-_Entities_array":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "Query",
                            "inputs":  {
                                "from":  "@variables('Entities')",
                                "where":  "@equals(item()?['kind'], 'CloudApplication')"
                            }
                        },
                        "Get_user":  {
                            "runAfter":  {
                                "Entities_-_Get_Accounts":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "ApiConnection",
                            "inputs":  {
                                "host":  {
                                    "connection":  {
                                        "name":  "@parameters('$connections')['azuread']['connectionId']"
                                    }
                                },
                                "method":  "get",
                                "path":  "/v1.0/users/@{encodeURIComponent(body('Entities_-_Get_Accounts')?['Accounts']?[0]?['aadUserID'])}"
                            }
                        },
                        "Initialize_variable_-_Entities_array":  {
                            "runAfter":  {
                            },
                            "type":  "InitializeVariable",
                            "inputs":  {
                                "variables":  [
                                    {
                                        "name":  "Entities",
                                        "type":  "array",
                                        "value":  "@triggerBody()?['object']?['properties']?['relatedEntities']"
                                    }
                                ]
                            }
                        },
                        "Parse_JSON":  {
                            "runAfter":  {
                                "Filter_array_-_CloudApplication_entity":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "ParseJson",
                            "inputs":  {
                                "content":  "@body('Filter_array_-_CloudApplication_entity')",
                                "schema":  {
                                    "items":  {
                                        "properties":  {
                                            "id":  {
                                                "type":  "string"
                                            },
                                            "kind":  {
                                                "type":  "string"
                                            },
                                            "name":  {
                                                "type":  "string"
                                            },
                                            "properties":  {
                                                "properties":  {
                                                    "appId":  {
                                                        "type":  "integer"
                                                    },
                                                    "appName":  {
                                                        "type":  "string"
                                                    },
                                                    "friendlyName":  {
                                                        "type":  "string"
                                                    }
                                                },
                                                "type":  "object"
                                            },
                                            "type":  {
                                                "type":  "string"
                                            }
                                        },
                                        "required":  [
                                            "id",
                                            "name",
                                            "type",
                                            "kind",
                                            "properties"
                                        ],
                                        "type":  "object"
                                    },
                                    "type":  "array"
                                }
                            }
                        },
                        "Post_adaptive_card_and_wait_for_a_response":  {
                            "runAfter":  {
                                "Compose":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "ApiConnectionWebhook",
                            "inputs":  {
                                "body":  {
                                    "body":  {
                                        "messageBody":  "@{outputs('Compose')}",
                                        "recipient":  {
                                            "to":  "@body('Get_user')?['mail']"
                                        },
                                        "updateMessage":  "Thanks for your response!"
                                    },
                                    "notificationUrl":  "@{listCallbackUrl()}"
                                },
                                "host":  {
                                    "connection":  {
                                        "name":  "@parameters('$connections')['teams']['connectionId']"
                                    }
                                },
                                "path":  "/v1.0/teams/conversation/gatherinput/poster/Flow bot/location/@{encodeURIComponent('Chat with Flow bot')}/$subscriptions"
                            }
                        },
                        "Update_incident_-_automated_tag":  {
                            "runAfter":  {
                                "Condition":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "ApiConnection",
                            "inputs":  {
                                "body":  {
                                    "incidentArmId":  "@triggerBody()?['object']?['id']",
                                    "tagsToAdd":  {
                                        "TagsToAdd":  [
                                            {
                                                "Tag":  "automated"
                                            }
                                        ]
                                    }
                                },
                                "host":  {
                                    "connection":  {
                                        "name":  "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "method":  "put",
                                "path":  "/Incidents"
                            }
                        }
                    },
                    "outputs":  {
                    }
                },
                "parameters":  {
                    "$connections":  {
                        "value":  {
                            "azuread":  {
                                "connectionId":  "[resourceId('Microsoft.Web/connections', variables('AzureadConnectionName'))]",
                                "connectionName":  "[variables('AzureadConnectionName')]",
                                "id":  "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Azuread')]"
                            },
                            "azuresentinel":  {
                                "connectionId":  "[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
                                "connectionName":  "[variables('MicrosoftSentinelConnectionName')]",
                                "id":  "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Azuresentinel')]",
                                "connectionProperties":  {
                                    "authentication":  {
                                        "type":  "ManagedServiceIdentity"
                                    }
                                }
                            },
                            "teams":  {
                                "connectionId":  "[resourceId('Microsoft.Web/connections', variables('TeamsConnectionName'))]",
                                "connectionName":  "[variables('TeamsConnectionName')]",
                                "id":  "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Teams')]"
                            }
                        }
                    }
                }
            },
            "name":  "[parameters('PlaybookName')]",
            "type":  "Microsoft.Logic/workflows",
            "location":  "[resourceGroup().location]",
            "tags":  {
                "use case":  "3",
                "hidden-SentinelTemplateName":  "UnsanctionedApp",
                "hidden-SentinelTemplateVersion":  "1.0"
            },
            "identity":  {
                "type":  "SystemAssigned"
            },
            "apiVersion":  "2017-07-01",
            "dependsOn":  [
                "[resourceId('Microsoft.Web/connections', variables('AzureadConnectionName'))]",
                "[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
                "[resourceId('Microsoft.Web/connections', variables('TeamsConnectionName'))]"
            ]
        },
        {
            "type":  "Microsoft.Web/connections",
            "apiVersion":  "2016-06-01",
            "name":  "[variables('AzureadConnectionName')]",
            "location":  "[resourceGroup().location]",
            "kind":  "V1",
            "properties":  {
                "displayName":  "[variables('AzureadConnectionName')]",
                "customParameterValues":  {
                },
                "api":  {
                    "id":  "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Azuread')]"
                }
            }
        },
        {
            "type":  "Microsoft.Web/connections",
            "apiVersion":  "2016-06-01",
            "name":  "[variables('MicrosoftSentinelConnectionName')]",
            "location":  "[resourceGroup().location]",
            "kind":  "V1",
            "properties":  {
                "displayName":  "[variables('MicrosoftSentinelConnectionName')]",
                "customParameterValues":  {
                },
                "parameterValueType":  "Alternative",
                "api":  {
                    "id":  "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Azuresentinel')]"
                }
            }
        },
        {
            "type":  "Microsoft.Web/connections",
            "apiVersion":  "2016-06-01",
            "name":  "[variables('TeamsConnectionName')]",
            "location":  "[resourceGroup().location]",
            "kind":  "V1",
            "properties":  {
                "displayName":  "[variables('TeamsConnectionName')]",
                "customParameterValues":  {
                },
                "api":  {
                    "id":  "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Teams')]"
                }
            }
        }
    ]
}
