{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "metadata": {
        "title": "",
        "description": "",
        "prerequisites": "",
        "postDeployment": [],
        "prerequisitesDeployTemplateFile": "",
        "lastUpdateTime": "",
        "entities": [],
        "tags": [],
        "support": {
            "tier": "community",
            "armtemplate": "Generated from https://github.com/Azure/Azure-Sentinel/tree/master/Tools/Playbook-ARM-Template-Generator"
        },
        "author": {
            "name": ""
        }
    },
    "parameters": {
        "PlaybookName": {
            "defaultValue": "AnomalousLogin",
            "type": "string"
        }
    },
    "variables": {
        "AbuseipdbapiConnectionName": "abuseipdb-connection-AbuseIPDB-EnrichIncidentByIPInfo",
        "SentineltriageassistantConnectionName": "SentinelTriageAssistant",
        "AzureadConnectionName": "[concat('Azuread-', parameters('PlaybookName'))]",
        "MicrosoftSentinelConnectionName": "[concat('MicrosoftSentinel-', parameters('PlaybookName'))]",
        "TeamsConnectionName": "[concat('Teams-', parameters('PlaybookName'))]"
    },
    "resources": [
        {
            "properties": {
                "provisioningState": "Succeeded",
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "Microsoft_Sentinel_incident": {
                            "type": "ApiConnectionWebhook",
                            "inputs": {
                                "body": {
                                    "callback_url": "@{listCallbackUrl()}"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "path": "/incident-creation"
                            }
                        }
                    },
                    "actions": {
                        "Add_comment_to_incident_(V3)": {
                            "runAfter": {
                                "Initialize_variable_-_Check_answer_boolean": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "body": {
                                    "incidentArmId": "@triggerBody()?['object']?['id']",
                                    "message": "<p>Teams message sent to user @{body('Get_user')?['displayName']} - @{body('Get_user')?['mail']} at<br>\n@{convertTimeZone(utcNow(), 'UTC', 'Romance Standard Time', 'dd/MM/yyyy HH:mm:ss')}.<br>\nWaiting...</p>"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/Incidents/Comment"
                            }
                        },
                        "Base_Module": {
                            "runAfter": {},
                            "type": "ApiConnection",
                            "inputs": {
                                "body": {
                                    "Entities": "@triggerBody()?['object']?['properties']?['relatedEntities']",
                                    "IncidentARMId": "@triggerBody()?['object']?['id']",
                                    "WorkspaceId": "@triggerBody()?['workspaceId']"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['SentinelTriageAssistant']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/workflows/6e68021fa52540d6975742339365ff09/triggers/manual/paths/invoke/func/base",
                                "queries": {
                                    "api-version": "2016-10-01",
                                    "sig": "oRIkZcdtOkQcUPEaTqPFeLlr_7bkILYWDf5voVpLKG8",
                                    "sp": "/triggers/manual/run",
                                    "sv": "1.0"
                                }
                            }
                        },
                        "Compose": {
                            "runAfter": {
                                "Base_Module": [
                                    "Succeeded"
                                ],
                                "Entities_-_Get_IPs": [
                                    "Succeeded"
                                ],
                                "Get_user": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Compose",
                            "inputs": {
                                "$schema": "http://adaptivecards.io/schemas/adaptive-card.json",
                                "actions": [
                                    {
                                        "data": {
                                            "x": "confirm"
                                        },
                                        "title": "Submit response!",
                                        "type": "Action.Submit"
                                    }
                                ],
                                "body": [
                                    {
                                        "size": "Small",
                                        "style": "Person",
                                        "type": "Image",
                                        "url": "https://connectoricons-prod.azureedge.net/releases/v1.0.1391/1.0.1391.2130/azuresentinel/icon.png"
                                    },
                                    {
                                        "size": "Large",
                                        "text": "Incident: Anomalous login followed by a Teams action",
                                        "type": "TextBlock",
                                        "wrap": true
                                    },
                                    {
                                        "spacing": "Medium",
                                        "text": "Dear @{body('Get_user')?['displayName']},\n\nWe detected that you suspiciously logged-in at location **@{body('Base_Module')?['IPs']?[0]?['GeoData']?['city']}, @{body('Base_Module')?['IPs']?[0]?['GeoData']?['country']}** around date and time @{convertTimeZone(triggerBody()?['object']?['properties']?['CreatedTimeUtc'], 'UTC', 'Romance Standard Time', 'dd/MM/yyyy HH:mm:ss')}.\n\nWere your responsible for this log-in? If yes, please provide a business reasoning for these actions.\n\nKind regards,\nyour Incident Response team.",
                                        "type": "TextBlock",
                                        "wrap": true
                                    },
                                    {
                                        "size": "Large",
                                        "spacing": "Large",
                                        "text": "Response:",
                                        "type": "TextBlock",
                                        "weight": "Bolder"
                                    },
                                    {
                                        "choices": [
                                            {
                                                "title": "Yes",
                                                "value": "yes"
                                            },
                                            {
                                                "title": "No",
                                                "value": "no"
                                            }
                                        ],
                                        "errorMessage": "Please answer the question!",
                                        "id": "verification",
                                        "isRequired": true,
                                        "label": "Did u log-in at this location?",
                                        "style": "expanded",
                                        "type": "Input.ChoiceSet"
                                    },
                                    {
                                        "id": "reason",
                                        "isMultiline": true,
                                        "label": "If 'yes': please provide a short reasoning:",
                                        "maxLength": 0,
                                        "placeholder": "Type your text here...",
                                        "type": "Input.Text"
                                    }
                                ],
                                "type": "AdaptiveCard",
                                "version": "1.3"
                            }
                        },
                        "Condition": {
                            "actions": {
                                "Add_comment_to_incident_(V3)_2": {
                                    "runAfter": {
                                        "Compose_2": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": {
                                            "incidentArmId": "@triggerBody()?['object']?['id']",
                                            "message": "<p>@{outputs('Get_Logo')}<br>\nAbuseIPDB IP Checking Results:<br>\n@{outputs('Compose_2')}</p>"
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/Incidents/Comment"
                                    }
                                },
                                "Add_comment_to_incident_(V3)_4": {
                                    "runAfter": {
                                        "Risk_Scoring_Module": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": {
                                            "incidentArmId": "@triggerBody()?['object']?['id']",
                                            "message": "<p>User claims <strong>not</strong> to be responsible for these logins.. STATs automated triage calculated a risk score of: @{body('Risk_Scoring_Module')?['TotalScore']}<br>\n(~3 is normal). Check the comments for further information.</p>"
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/Incidents/Comment"
                                    }
                                },
                                "Compose_2": {
                                    "runAfter": {
                                        "Create_HTML_table": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Compose",
                                    "inputs": "@body('Create_HTML_table')"
                                },
                                "Create_HTML_table": {
                                    "runAfter": {
                                        "For_each": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Table",
                                    "inputs": {
                                        "format": "HTML",
                                        "from": "@variables('Result list')"
                                    }
                                },
                                "For_each": {
                                    "foreach": "@body('Entities_-_Get_IPs')?['IPs']",
                                    "actions": {
                                        "Append_to_array_variable": {
                                            "runAfter": {
                                                "AuseIPDB_CHECK_Endpoint": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "AppendToArrayVariable",
                                            "inputs": {
                                                "name": "Result list",
                                                "value": {
                                                    "abuseConfidenceScore": "@body('AuseIPDB_CHECK_Endpoint')?['data']?['abuseConfidenceScore']",
                                                    "hostnames": "@body('AuseIPDB_CHECK_Endpoint')?['data']?['hostnames']",
                                                    "ipAddress": "@body('AuseIPDB_CHECK_Endpoint')?['data']?['ipAddress']",
                                                    "isp": "@body('AuseIPDB_CHECK_Endpoint')?['data']?['isp']",
                                                    "lastReportedAt": "@body('AuseIPDB_CHECK_Endpoint')?['data']?['lastReportedAt']",
                                                    "totalReports": "@body('AuseIPDB_CHECK_Endpoint')?['data']?['totalReports']"
                                                }
                                            }
                                        },
                                        "AuseIPDB_CHECK_Endpoint": {
                                            "runAfter": {},
                                            "type": "ApiConnection",
                                            "inputs": {
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['AbuseIPDBAPI']['connectionId']"
                                                    }
                                                },
                                                "method": "get",
                                                "path": "/check",
                                                "queries": {
                                                    "ipAddress": "@items('For_each')?['Address']"
                                                }
                                            }
                                        }
                                    },
                                    "runAfter": {
                                        "Get_Logo": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Foreach"
                                },
                                "Get_Logo": {
                                    "runAfter": {},
                                    "type": "Compose",
                                    "inputs": "<img src=\"https://www.abuseipdb.com/img/abuseipdb.png.pagespeed.ce.CI8T6WsXU7.png\"  width=\"152\" height=\"32\"> "
                                },
                                "Out_of_Office_Module": {
                                    "runAfter": {
                                        "Get_Logo": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": {
                                            "BaseModuleBody": "@{body('Base_Module')}"
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['SentinelTriageAssistant']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/workflows/6e68021fa52540d6975742339365ff09/triggers/manual/paths/invoke/func/oofmodule",
                                        "queries": {
                                            "api-version": "2016-10-01",
                                            "sig": "oRIkZcdtOkQcUPEaTqPFeLlr_7bkILYWDf5voVpLKG8",
                                            "sp": "/triggers/manual/run",
                                            "sv": "1.0"
                                        }
                                    }
                                },
                                "Related_Alerts_Module": {
                                    "runAfter": {
                                        "Get_Logo": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": {
                                            "BaseModuleBody": "@{body('Base_Module')}",
                                            "CheckHosts": false,
                                            "CheckIPs": true,
                                            "LookbackInDays": 7
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['SentinelTriageAssistant']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/workflows/6e68021fa52540d6975742339365ff09/triggers/manual/paths/invoke/func/relatedalerts",
                                        "queries": {
                                            "api-version": "2016-10-01",
                                            "sig": "oRIkZcdtOkQcUPEaTqPFeLlr_7bkILYWDf5voVpLKG8",
                                            "sp": "/triggers/manual/run",
                                            "sv": "1.0"
                                        }
                                    }
                                },
                                "Risk_Scoring_Module": {
                                    "runAfter": {
                                        "Add_comment_to_incident_(V3)_2": [
                                            "Succeeded"
                                        ],
                                        "Out_of_Office_Module": [
                                            "Succeeded"
                                        ],
                                        "Related_Alerts_Module": [
                                            "Succeeded"
                                        ],
                                        "Threat_Intel_Module": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": {
                                            "BaseModuleBody": "@{body('Base_Module')}",
                                            "ScoringData": [
                                                {
                                                    "ModuleBody": "@body('Threat_Intel_Module')",
                                                    "ScoreLabel": "Threat Intelligence",
                                                    "ScoreMultiplier": 1,
                                                    "ScorePerItem": true
                                                },
                                                {
                                                    "ModuleBody": "@body('Related_Alerts_Module')",
                                                    "ScoreLabel": "Related Alerts",
                                                    "ScoreMultiplier": 1,
                                                    "ScorePerItem": true
                                                }
                                            ]
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['SentinelTriageAssistant']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/workflows/6e68021fa52540d6975742339365ff09/triggers/manual/paths/invoke/func/scoring",
                                        "queries": {
                                            "api-version": "2016-10-01",
                                            "sig": "oRIkZcdtOkQcUPEaTqPFeLlr_7bkILYWDf5voVpLKG8",
                                            "sp": "/triggers/manual/run",
                                            "sv": "1.0"
                                        }
                                    }
                                },
                                "Threat_Intel_Module": {
                                    "runAfter": {
                                        "Get_Logo": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": {
                                            "BaseModuleBody": "@{body('Base_Module')}",
                                            "CheckDomains": false,
                                            "CheckFileHashes": false,
                                            "CheckURLs": false
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['SentinelTriageAssistant']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/workflows/6e68021fa52540d6975742339365ff09/triggers/manual/paths/invoke/func/threatintel",
                                        "queries": {
                                            "api-version": "2016-10-01",
                                            "sig": "oRIkZcdtOkQcUPEaTqPFeLlr_7bkILYWDf5voVpLKG8",
                                            "sp": "/triggers/manual/run",
                                            "sv": "1.0"
                                        }
                                    }
                                },
                                "Update_incident_2": {
                                    "runAfter": {
                                        "Add_comment_to_incident_(V3)_4": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": {
                                            "incidentArmId": "@triggerBody()?['object']?['id']",
                                            "severity": "High",
                                            "tagsToAdd": {
                                                "TagsToAdd": [
                                                    {
                                                        "Tag": "not_responsible"
                                                    }
                                                ]
                                            }
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                            }
                                        },
                                        "method": "put",
                                        "path": "/Incidents"
                                    }
                                }
                            },
                            "runAfter": {
                                "Initialize_Results_List": [
                                    "Succeeded"
                                ]
                            },
                            "else": {
                                "actions": {
                                    "Add_comment_to_incident_(V3)_3": {
                                        "runAfter": {},
                                        "type": "ApiConnection",
                                        "inputs": {
                                            "body": {
                                                "incidentArmId": "@triggerBody()?['object']?['id']",
                                                "message": "<p>Teams message received at @{convertTimeZone(utcNow(), 'UTC', 'Romance Standard Time', 'dd/MM/yyyy HH:mm:ss')} from@{body('Get_user')?['mail']}.<br>\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -<br>\nUser claims to be responsible for these logins.<br>\nReason:<br>\n@{body('Post_Adaptive_Card_and_wait_for_a_response')?['data']?['reason']}</p>"
                                            },
                                            "host": {
                                                "connection": {
                                                    "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                                }
                                            },
                                            "method": "post",
                                            "path": "/Incidents/Comment"
                                        }
                                    },
                                    "Update_incident_3": {
                                        "runAfter": {
                                            "Add_comment_to_incident_(V3)_3": [
                                                "Succeeded"
                                            ]
                                        },
                                        "type": "ApiConnection",
                                        "inputs": {
                                            "body": {
                                                "incidentArmId": "@triggerBody()?['object']?['id']",
                                                "severity": "Informational",
                                                "tagsToAdd": {
                                                    "TagsToAdd": [
                                                        {
                                                            "Tag": "responsible"
                                                        }
                                                    ]
                                                }
                                            },
                                            "host": {
                                                "connection": {
                                                    "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                                }
                                            },
                                            "method": "put",
                                            "path": "/Incidents"
                                        }
                                    }
                                }
                            },
                            "expression": {
                                "and": [
                                    {
                                        "not": {
                                            "equals": [
                                                "@body('Post_adaptive_card_and_wait_for_a_response')?['data']['verification']",
                                                "yes"
                                            ]
                                        }
                                    }
                                ]
                            },
                            "type": "If"
                        },
                        "Entities_-_Get_Accounts": {
                            "runAfter": {},
                            "type": "ApiConnection",
                            "inputs": {
                                "body": "@triggerBody()?['object']?['properties']?['relatedEntities']",
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/entities/account"
                            }
                        },
                        "Entities_-_Get_IPs": {
                            "runAfter": {},
                            "type": "ApiConnection",
                            "inputs": {
                                "body": "@triggerBody()?['object']?['properties']?['relatedEntities']",
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/entities/ip"
                            }
                        },
                        "Get_user": {
                            "runAfter": {
                                "Entities_-_Get_Accounts": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azuread']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/v1.0/users/@{encodeURIComponent(body('Entities_-_Get_Accounts')?['Accounts']?[0]?['aadUserID'])}"
                            }
                        },
                        "Initialize_Results_List": {
                            "runAfter": {
                                "Set_variable_-_set_to_true": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "Result list",
                                        "type": "array"
                                    }
                                ]
                            }
                        },
                        "Initialize_variable_-_Check_answer_boolean": {
                            "runAfter": {
                                "Compose": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "ApprovalResponse",
                                        "type": "boolean",
                                        "value": false
                                    }
                                ]
                            }
                        },
                        "Post_adaptive_card_and_wait_for_a_response": {
                            "runAfter": {
                                "Add_comment_to_incident_(V3)": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnectionWebhook",
                            "inputs": {
                                "body": {
                                    "body": {
                                        "messageBody": "@{outputs('Compose')}",
                                        "recipient": {
                                            "to": "@body('Get_user')?['mail']"
                                        },
                                        "updateMessage": "Thanks for your response!"
                                    },
                                    "notificationUrl": "@{listCallbackUrl()}"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['teams']['connectionId']"
                                    }
                                },
                                "path": "/v1.0/teams/conversation/gatherinput/poster/Flow bot/location/@{encodeURIComponent('Chat with Flow bot')}/$subscriptions"
                            }
                        },
                        "Set_variable_-_set_to_true": {
                            "runAfter": {
                                "Post_adaptive_card_and_wait_for_a_response": [
                                    "Succeeded"
                                ]
                            },
                            "type": "SetVariable",
                            "inputs": {
                                "name": "ApprovalResponse",
                                "value": true
                            }
                        },
                        "Terminate_-_make_sure_the_Until_loop_ends": {
                            "runAfter": {
                                "Update_incident": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Terminate",
                            "inputs": {
                                "runStatus": "Succeeded"
                            }
                        },
                        "Until_-_Teams_message_has_been_answered_(max._3)": {
                            "actions": {
                                "Condition_-_extra_check": {
                                    "actions": {
                                        "Post_message_in_a_chat_or_channel": {
                                            "runAfter": {},
                                            "type": "ApiConnection",
                                            "inputs": {
                                                "body": {
                                                    "isAlert": true,
                                                    "messageBody": "<p><span style=\"font-size: 16px\"><strong>REMINDER</strong></span><br>\nPlease respond to the question!</p>",
                                                    "recipient": "@body('Get_user')?['mail']"
                                                },
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['teams']['connectionId']"
                                                    }
                                                },
                                                "method": "post",
                                                "path": "/beta/teams/conversation/message/poster/Flow bot/location/@{encodeURIComponent('Chat with Flow bot')}"
                                            }
                                        }
                                    },
                                    "runAfter": {
                                        "Delay_-_x_amount_of_time_between_reminders": [
                                            "Succeeded"
                                        ]
                                    },
                                    "expression": {
                                        "and": [
                                            {
                                                "equals": [
                                                    "@variables('ApprovalResponse')",
                                                    false
                                                ]
                                            }
                                        ]
                                    },
                                    "type": "If"
                                },
                                "Delay_-_x_amount_of_time_between_reminders": {
                                    "runAfter": {},
                                    "type": "Wait",
                                    "inputs": {
                                        "interval": {
                                            "count": 1,
                                            "unit": "Minute"
                                        }
                                    }
                                }
                            },
                            "runAfter": {
                                "Add_comment_to_incident_(V3)": [
                                    "Succeeded"
                                ]
                            },
                            "expression": "@equals(variables('ApprovalResponse'), true)",
                            "limit": {
                                "count": 3,
                                "timeout": "PT1H"
                            },
                            "type": "Until"
                        },
                        "Update_incident": {
                            "runAfter": {
                                "Condition": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "body": {
                                    "incidentArmId": "@triggerBody()?['object']?['id']",
                                    "tagsToAdd": {
                                        "TagsToAdd": [
                                            {
                                                "Tag": "automated"
                                            }
                                        ]
                                    }
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "method": "put",
                                "path": "/Incidents"
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "AbuseIPDBAPI": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('AbuseipdbapiConnectionName'))]",
                                "connectionName": "[variables('AbuseipdbapiConnectionName')]",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Web/customApis/AbuseIPDBAPI')]"
                            },
                            "SentinelTriageAssistant": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('SentineltriageassistantConnectionName'))]",
                                "connectionName": "[variables('SentineltriageassistantConnectionName')]",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Web/customApis/', variables('SentineltriageassistantConnectionName'))]"
                            },
                            "azuread": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('AzureadConnectionName'))]",
                                "connectionName": "[variables('AzureadConnectionName')]",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Azuread')]"
                            },
                            "azuresentinel": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
                                "connectionName": "[variables('MicrosoftSentinelConnectionName')]",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Azuresentinel')]",
                                "connectionProperties": {
                                    "authentication": {
                                        "type": "ManagedServiceIdentity"
                                    }
                                }
                            },
                            "teams": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('TeamsConnectionName'))]",
                                "connectionName": "[variables('TeamsConnectionName')]",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Teams')]"
                            }
                        }
                    }
                }
            },
            "name": "[parameters('PlaybookName')]",
            "type": "Microsoft.Logic/workflows",
            "location": "[resourceGroup().location]",
            "tags": {
                "use case": "4",
                "hidden-SentinelTemplateName": "AnomalousLogin",
                "hidden-SentinelTemplateVersion": "1.0"
            },
            "identity": {
                "type": "SystemAssigned"
            },
            "apiVersion": "2017-07-01",
            "dependsOn": [
                // "[resourceId('Microsoft.Web/connections', variables('AbuseipdbapiConnectionName'))]",
                // "[resourceId('Microsoft.Web/connections', variables('SentineltriageassistantConnectionName'))]",
                "[resourceId('Microsoft.Web/connections', variables('AzureadConnectionName'))]",
                "[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
                "[resourceId('Microsoft.Web/connections', variables('TeamsConnectionName'))]"
            ]
        },
        // {
        //     "type":  "Microsoft.Web/connections",
        //     "apiVersion":  "2016-06-01",
        //     "name":  "[variables('AbuseipdbapiConnectionName')]",
        //     "location":  "[resourceGroup().location]",
        //     "kind":  "V1",
        //     "properties":  {
        //         "displayName":  "[variables('AbuseipdbapiConnectionName')]",
        //         "customParameterValues":  {
        //         },
        //         "api":  {
        //             "id":  "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/customApis/Abuseipdbapi')]"
        //         }
        //     }
        // },
        // {
        //     "type":  "Microsoft.Web/connections",
        //     "apiVersion":  "2016-06-01",
        //     "name":  "[variables('SentineltriageassistantConnectionName')]",
        //     "location":  "[resourceGroup().location]",
        //     "kind":  "V1",
        //     "properties":  {
        //         "displayName":  "[variables('SentineltriageassistantConnectionName')]",
        //         "customParameterValues":  {
        //         },
        //         "api":  {
        //             "id":  "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/customApis/Sentineltriageassistant')]"
        //         }
        //     }
        // },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('AzureadConnectionName')]",
            "location": "[resourceGroup().location]",
            "kind": "V1",
            "properties": {
                "displayName": "[variables('AzureadConnectionName')]",
                "customParameterValues": {},
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Azuread')]"
                }
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('MicrosoftSentinelConnectionName')]",
            "location": "[resourceGroup().location]",
            "kind": "V1",
            "properties": {
                "displayName": "[variables('MicrosoftSentinelConnectionName')]",
                "customParameterValues": {},
                "parameterValueType": "Alternative",
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Azuresentinel')]"
                }
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('TeamsConnectionName')]",
            "location": "[resourceGroup().location]",
            "kind": "V1",
            "properties": {
                "displayName": "[variables('TeamsConnectionName')]",
                "customParameterValues": {},
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Teams')]"
                }
            }
        }
    ]
}